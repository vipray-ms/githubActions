"use strict";(self.webpackChunkapi_wiki=self.webpackChunkapi_wiki||[]).push([[588],{3230:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var t=i(4848),r=i(8453);const o={},s="JSON API Spec",a={id:"Json API Contract/json_wiki",title:"JSON API Spec",description:"",source:"@site/docs/Json API Contract/json_wiki.md",sourceDirName:"Json API Contract",slug:"/Json API Contract/json_wiki",permalink:"/githubActions/docs/Json API Contract/json_wiki",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Descriptive API Spec",permalink:"/githubActions/docs/Descriptive API Contract/descriptive_wiki"}},c={},p=[];function u(n){const e={code:"code",h1:"h1",pre:"pre",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"json-api-spec",children:"JSON API Spec"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:'title="JSON API Spec"',children:'{\n    "swagger": "2.0",\n    "info": {\n        "title": "NewRelic.Observability",\n        "version": "2022-07-01-preview",\n        "x-cadl-generated": [\n            {\n                "emitter": "@azure-tools/cadl-autorest"\n            }\n        ]\n    },\n    "schemes": [\n        "https"\n    ],\n    "host": "management.azure.com",\n    "produces": [\n        "application/json"\n    ],\n    "consumes": [\n        "application/json"\n    ],\n    "security": [\n        {\n            "azure_auth": [\n                "user_impersonation"\n            ]\n        }\n    ],\n    "securityDefinitions": {\n        "azure_auth": {\n            "type": "oauth2",\n            "description": "Azure Active Directory OAuth2 Flow.",\n            "flow": "implicit",\n            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",\n            "scopes": {\n                "user_impersonation": "impersonate your user account"\n            }\n        }\n    },\n    "paths": {\n        "/subscriptions/subscriptionId/providers/NewRelic.Observability/accounts": {\n            "get": {\n                "tags": [\n                    "Accounts"\n                ],\n                "operationId": "Accounts_List",\n                "description": "List all the existing accounts",\n                "parameters": [\n                    {\n                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"\n                    },\n                    {\n                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"\n                    },\n                    {\n                        "$ref": "#/parameters/UserEmailParameter"\n                    },\n                    {\n                        "$ref": "#/parameters/LocationParameter"\n                    }\n                ],\n                "responses": {\n                    "200": {\n                        "description": "ARM operation completed successfully.",\n                        "schema": {\n                            "$ref": "#/definitions/AccountsListResponse"\n                        }\n                    },\n                    "default": {\n                        "description": "An unexpected error response.",\n                        "schema": {\n                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"\n                        }\n                    }\n                },\n                "x-ms-pageable": {\n                    "nextLinkName": "nextLink"\n                },\n                "x-ms-examples": {\n                    "Accounts_List_MaximumSet_Gen": {\n                        "$ref": "./examples/Accounts_List_MaximumSet_Gen.json"\n                    },\n                    "Accounts_List_MinimumSet_Gen": {\n                        "$ref": "./examples/Accounts_List_MinimumSet_Gen.json"\n                    }\n                }\n            }\n        },\n        "/subscriptions/subscriptionId/providers/NewRelic.Observability/organizations": {\n            "get": {\n                "tags": [\n                    "Organizations"\n                ],\n                "operationId": "Organizations_List",\n                "description": "List all the existing organizations",\n                "parameters": [\n                    {\n                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"\n                    },\n                    {\n                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"\n                    },\n                    {\n                        "$ref": "#/parameters/UserEmailParameter"\n                    },\n                    {\n                        "$ref": "#/parameters/LocationParameter"\n                    }\n                ],\n                "responses": {\n                    "200": {\n                        "description": "ARM operation completed successfully.",\n                        "schema": {\n                            "$ref": "#/definitions/OrganizationsListResponse"\n                        }\n                    },\n                    "default": {\n                        "description": "An unexpected error response.",\n                        "schema": {\n                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"\n                        }\n                    }\n                },\n                "x-ms-pageable": {\n                    "nextLinkName": "nextLink"\n                },\n                "x-ms-examples": {\n                    "Organizations_List_MaximumSet_Gen": {\n                        "$ref": "./examples/Organizations_List_MaximumSet_Gen.json"\n                    },\n                    "Organizations_List_MinimumSet_Gen": {\n                        "$ref": "./examples/Organizations_List_MinimumSet_Gen.json"\n                    }\n                }\n            }\n        },\n        "/subscriptions/subscriptionId/providers/NewRelic.Observability/plans": {\n            "get": {\n                "tags": [\n                    "Plan"\n                ],\n                "operationId": "Plans_List",\n                "description": "List plans data",\n                "parameters": [\n                    {\n                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"\n                    },\n                    {\n                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"\n                    },\n                    {\n                        "$ref": "#/parameters/AccountIdParameter"\n                    },\n                    {\n                        "$ref": "#/parameters/OrganizationIdParameter"\n                    }\n                ],\n                "responses": {\n                    "200": {\n                        "description": "ARM operation completed successfully.",\n                        "schema": {\n                            "$ref": "#/definitions/PlanDataListResponse"\n                        }\n                    },\n                    "default": {\n                        "description": "An unexpected error response.",\n                        "schema": {\n                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"\n                        }\n                    }\n                },\n                "x-ms-pageable": {\n                    "nextLinkName": "nextLink"\n                },\n                "x-ms-examples": {\n                    "Plans_List_MaximumSet_Gen": {\n                        "$ref": "./examples/Plans_List_MaximumSet_Gen.json"\n                    },\n                    "Plans_List_MinimumSet_Gen": {\n                        "$ref": "./examples/Plans_List_MinimumSet_Gen.json"\n                    }\n                }\n            }\n        }\n    },\n    "definitions": {\n        "AccountCreationSource": {\n            "type": "string",\n            "description": "Source of Account creation",\n            "enum": [\n                "LIFTR",\n                "NEWRELIC"\n            ],\n            "x-ms-enum": {\n                "name": "AccountCreationSource",\n                "modelAsString": true,\n                "values": [\n                    {\n                        "name": "LIFTR",\n                        "value": "LIFTR",\n                        "description": "Account is created from LIFTR"\n                    },\n                    {\n                        "name": "NEWRELIC",\n                        "value": "NEWRELIC",\n                        "description": "Account is created from NEWRELIC"\n                    }\n                ]\n            }\n        },\n        "AccountIdParameter": {\n            "type": "object",\n            "properties": {},\n            "description": "Account Id parameter"\n        },\n        "AccountInfo": {\n            "type": "object",\n            "properties": {\n                "accountId": {\n                    "type": "string",\n                    "description": "Account id"\n                },\n                "ingestionKey": {\n                    "$ref": "#/definitions/SecureString",\n                    "description": "ingestion key of account"\n                },\n                "region": {\n                    "type": "string",\n                    "description": "NewRelic account region"\n                }\n            },\n            "description": "Account Info of the NewRelic account"\n        },\n        "AccountProperties": {\n            "type": "object",\n            "properties": {\n                "organizationId": {\n                    "type": "string",\n                    "description": "organization id"\n                },\n                "accountId": {\n                    "type": "string",\n                    "description": "account id"\n                },\n                "accountName": {\n                    "type": "string",\n                    "description": "account name"\n                },\n                "region": {\n                    "type": "string",\n                    "description": "region"\n                }\n            },\n            "description": "List of all the New relic accounts for the given user"\n        },\n        "AccountsListResponse": {\n            "type": "object",\n            "properties": {\n                "value": {\n                    "type": "array",\n                    "items": {\n                        "$ref": "#/definitions/AccountResource"\n                    },\n                    "x-cadl-name": "AccountResource[]",\n                    "description": "The AccountResource items on this page"\n                },\n                "nextLink": {\n                    "type": "string",\n                    "format": "uri",\n                    "description": "The link to the next page of items",\n                    "x-cadl-name": "Rest.ResourceLocation"\n                }\n            },\n            "description": "Response of get all accounts Operation.",\n            "required": [\n                "value"\n            ]\n        },\n        "AccountResource": {\n            "type": "object",\n            "properties": {\n                "properties": {\n                    "$ref": "#/definitions/AccountProperties",\n                    "description": "The resource-specific properties for this resource.",\n                    "x-ms-client-flatten": true,\n                    "x-ms-mutability": [\n                        "read",\n                        "create"\n                    ]\n                }\n            },\n            "description": "The details of a account resource.",\n            "allOf": [\n                {\n                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"\n                }\n            ]\n        },\n        "BillingCycle": {\n            "type": "string",\n            "description": "Different usage type like YEARLY/MONTHLY",\n            "enum": [\n                "YEARLY",\n                "MONTHLY",\n                "WEEKLY"\n            ],\n            "x-ms-enum": {\n                "name": "BillingCycle",\n                "modelAsString": true,\n                "values": [\n                    {\n                        "name": "YEARLY",\n                        "value": "YEARLY",\n                        "description": "Billing cycle is YEARLY"\n                    },\n                    {\n                        "name": "MONTHLY",\n                        "value": "MONTHLY",\n                        "description": "Billing cycle is MONTHLY"\n                    },\n                    {\n                        "name": "WEEKLY",\n                        "value": "WEEKLY",\n                        "description": "Billing cycle is WEEKLY"\n                    }\n                ]\n            }\n        },\n        "BillingSource": {\n            "type": "string",\n            "description": "Billing source",\n            "enum": [\n                "AZURE",\n                "NEWRELIC"\n            ],\n            "x-ms-enum": {\n                "name": "BillingSource",\n                "modelAsString": true,\n                "values": [\n                    {\n                        "name": "AZURE",\n                        "value": "AZURE",\n                        "description": "Billing source is Azure"\n                    },\n                    {\n                        "name": "NEWRELIC",\n                        "value": "NEWRELIC"\n                    }\n                ]\n            }\n        },\n        "NewRelicAccountProperties": {\n            "type": "object",\n            "properties": {\n                "userId": {\n                    "type": "string",\n                    "description": "User id"\n                },\n                "accountInfo": {\n                    "$ref": "#/definitions/AccountInfo",\n                    "description": "NewRelic Account Information"\n                },\n                "organizationInfo": {\n                    "$ref": "#/definitions/OrganizationInfo",\n                    "description": "NewRelic Organization Information"\n                },\n                "singleSignOnProperties": {\n                    "$ref": "#/definitions/NewRelicSingleSignOnProperties",\n                    "description": "date when plan was applied"\n                }\n            },\n            "description": "Properties of the NewRelic account"\n        },\n        "NewRelicMonitorResource": {\n            "type": "object",\n            "properties": {\n                "properties": {\n                    "$ref": "#/definitions/MonitorProperties",\n                    "description": "The resource-specific properties for this resource.",\n                    "x-ms-client-flatten": true,\n                    "x-ms-mutability": [\n                        "read",\n                        "create"\n                    ]\n                },\n                "identity": {\n                    "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",\n                    "description": "The managed service identities assigned to this resource."\n                }\n            },\n            "description": "A Monitor Resource by NewRelic",\n            "required": [\n                "properties"\n            ],\n            "allOf": [\n                {\n                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"\n                }\n            ]\n        },\n        "NewRelicMonitorResourceListResult": {\n            "type": "object",\n            "properties": {\n                "value": {\n                    "type": "array",\n                    "items": {\n                        "$ref": "#/definitions/NewRelicMonitorResource"\n                    },\n                    "x-cadl-name": "NewRelicMonitorResource[]",\n                    "description": "The NewRelicMonitorResource items on this page"\n                },\n                "nextLink": {\n                    "type": "string",\n                    "format": "uri",\n                    "description": "The link to the next page of items",\n                    "x-cadl-name": "Rest.ResourceLocation"\n                }\n            },\n            "description": "The response of a NewRelicMonitorResource list operation.",\n            "required": [\n                "value"\n            ]\n        },\n        "NewRelicMonitorResourceUpdate": {\n            "type": "object",\n            "properties": {\n                "identity": {\n                    "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",\n                    "description": "The managed service identities assigned to this resource."\n                },\n                "tags": {\n                    "type": "object",\n                    "additionalProperties": {\n                        "type": "string"\n                    },\n                    "x-cadl-name": "Record<string>",\n                    "description": "Resource tags."\n                },\n                "properties": {\n                    "$ref": "#/definitions/NewRelicMonitorResourceUpdateProperties",\n                    "x-ms-client-flatten": true\n                }\n            },\n            "description": "The type used for update operations of the NewRelicMonitorResource."\n        },\n        "NewRelicMonitorResourceUpdateProperties": {\n            "type": "object",\n            "properties": {\n                "newRelicAccountProperties": {\n                    "$ref": "#/definitions/NewRelicAccountProperties",\n                    "description": "MarketplaceSubscriptionStatus of the resource"\n                },\n                "userInfo": {\n                    "$ref": "#/definitions/UserInfo",\n                    "description": "User Info"\n                },\n                "planData": {\n                    "$ref": "#/definitions/PlanData",\n                    "description": "Plan details"\n                },\n                "orgCreationSource": {\n                    "$ref": "#/definitions/OrgCreationSource",\n                    "description": "Source of org creation"\n                },\n                "accountCreationSource": {\n                    "$ref": "#/definitions/AccountCreationSource",\n                    "description": "Source of account creation"\n                }\n            },\n            "description": "The updatable properties of the NewRelicMonitorResource."\n        },\n        "NewRelicSingleSignOnProperties": {\n            "type": "object",\n            "properties": {\n                "singleSignOnState": {\n                    "$ref": "#/definitions/SingleSignOnStates",\n                    "description": "Single sign-on state"\n                },\n                "enterpriseAppId": {\n                    "type": "string",\n                    "description": "The Id of the Enterprise App used for Single sign-on."\n                },\n                "singleSignOnUrl": {\n                    "type": "string",\n                    "description": "The login URL specific to this NewRelic Organization"\n                },\n                "provisioningState": {\n                    "$ref": "#/definitions/ProvisioningState",\n                    "description": "Provisioning state"\n                }\n            },\n            "description": "Single sign on Info of the NewRelic account"\n        },\n        "OrgCreationSource": {\n            "type": "string",\n            "description": "Source of Org creation",\n            "enum": [\n                "LIFTR",\n                "NEWRELIC"\n            ],\n            "x-ms-enum": {\n                "name": "OrgCreationSource",\n                "modelAsString": true,\n                "values": [\n                    {\n                        "name": "LIFTR",\n                        "value": "LIFTR",\n                        "description": "Org is created from LIFTR"\n                    },\n                    {\n                        "name": "NEWRELIC",\n                        "value": "NEWRELIC",\n                        "description": "Org is created from NEWRELIC"\n                    }\n                ]\n            }\n        },\n        "OrganizationIdParameter": {\n            "type": "object",\n            "properties": {},\n            "description": "Organization Id parameter"\n        },\n        "OrganizationInfo": {\n            "type": "object",\n            "properties": {\n                "organizationId": {\n                    "type": "string",\n                    "description": "Organization id"\n                }\n            },\n            "description": "Organization Info of the NewRelic account"\n        },\n        "OrganizationProperties": {\n            "type": "object",\n            "properties": {\n                "organizationId": {\n                    "type": "string",\n                    "description": "organization id"\n                },\n                "organizationName": {\n                    "type": "string",\n                    "description": "organization name"\n                },\n                "billingSource": {\n                    "$ref": "#/definitions/BillingSource",\n                    "description": "Billing source"\n                }\n            },\n            "description": "Details of Organizations"\n        },\n        "OrganizationsListResponse": {\n            "type": "object",\n            "properties": {\n                "value": {\n                    "type": "array",\n                    "items": {\n                        "$ref": "#/definitions/OrganizationResource"\n                    },\n                    "x-cadl-name": "OrganizationResource[]",\n                    "description": "The OrganizationResource items on this page"\n                },\n                "nextLink": {\n                    "type": "string",\n                    "format": "uri",\n                    "description": "The link to the next page of items",\n                    "x-cadl-name": "Rest.ResourceLocation"\n                }\n            },\n            "description": "Response of get all organizations Operation.",\n            "required": [\n                "value"\n            ]\n        },\n        "OrganizationResource": {\n            "type": "object",\n            "properties": {\n                "properties": {\n                    "$ref": "#/definitions/OrganizationProperties",\n                    "description": "The resource-specific properties for this resource.",\n                    "x-ms-client-flatten": true,\n                    "x-ms-mutability": [\n                        "read",\n                        "create"\n                    ]\n                }\n            },\n            "description": "The details of a Organization resource.",\n            "allOf": [\n                {\n                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"\n                }\n            ]\n        },\n        "PlanData": {\n            "type": "object",\n            "properties": {\n                "usageType": {\n                    "$ref": "#/definitions/UsageType",\n                    "description": "Different usage type like PAYG/COMMITTED. this could be enum"\n                },\n                "billingCycle": {\n                    "$ref": "#/definitions/BillingCycle",\n                    "description": "Different billing cycles like MONTHLY/WEEKLY. this could be enum"\n                },\n                "planDetails": {\n                    "type": "string",\n                    "description": "plan id as published by NewRelic"\n                },\n                "effectiveDate": {\n                    "type": "string",\n                    "format": "date-time",\n                    "description": "date when plan was applied"\n                }\n            },\n            "description": "Plan data of NewRelic Monitor resource"\n        },\n        "PlanDataResource": {\n            "type": "object",\n            "properties": {\n                "properties": {\n                    "$ref": "#/definitions/PlanDataProperties",\n                    "description": "The resource-specific properties for this resource.",\n                    "x-ms-client-flatten": true,\n                    "x-ms-mutability": [\n                        "read",\n                        "create"\n                    ]\n                }\n            },\n            "description": "The details of a PlanData resource.",\n            "allOf": [\n                {\n                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"\n                }\n            ]\n        },\n        "PlanDataListResponse": {\n            "type": "object",\n            "properties": {\n                "value": {\n                    "type": "array",\n                    "items": {\n                        "$ref": "#/definitions/PlanDataResource"\n                    },\n                    "x-cadl-name": "PlanDataResource[]",\n                    "description": "The PlanDataResource items on this page"\n                },\n                "nextLink": {\n                    "type": "string",\n                    "format": "uri",\n                    "description": "The link to the next page of items",\n                    "x-cadl-name": "Rest.ResourceLocation"\n                }\n            },\n            "description": "Response of get all plan data Operation.",\n            "required": [\n                "value"\n            ]\n        },\n        "PlanDataProperties": {\n            "type": "object",\n            "properties": {\n                "planData": {\n                    "$ref": "#/definitions/PlanData",\n                    "description": "Plan details"\n                },\n                "orgCreationSource": {\n                    "$ref": "#/definitions/OrgCreationSource",\n                    "description": "Source of org creation"\n                },\n                "accountCreationSource": {\n                    "$ref": "#/definitions/AccountCreationSource",\n                    "description": "Source of account creation"\n                }\n            },\n            "description": "Plan details"\n        },\n        "UserEmailParameter": {\n            "type": "object",\n            "properties": {},\n            "description": "User email specification."\n        },\n        "email": {\n            "type": "string",\n            "description": "Reusable representation of an email address",\n            "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z]{2,}$"\n        }\n    },\n    "parameters": {\n        "AccountIdParameter": {\n            "name": "accountId",\n            "in": "query",\n            "required": false,\n            "description": "Account Id.",\n            "type": "string",\n            "x-ms-parameter-location": "method"\n        },\n        "LocationParameter": {\n            "name": "location",\n            "in": "query",\n            "required": true,\n            "description": "Location for NewRelic.",\n            "type": "string",\n            "x-ms-parameter-location": "method"\n        },\n        "OrganizationIdParameter": {\n            "name": "organizationId",\n            "in": "query",\n            "required": false,\n            "description": "Organization Id.",\n            "type": "string",\n            "x-ms-parameter-location": "method"\n        },\n        "UserEmailParameter": {\n            "name": "userEmail",\n            "in": "query",\n            "required": true,\n            "description": "User Email.",\n            "type": "string",\n            "x-ms-parameter-location": "method"\n        }\n    }\n}\n'})})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>a});var t=i(6540);const r={},o=t.createContext(r);function s(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);