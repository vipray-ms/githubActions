"use strict";(self.webpackChunkapi_wiki=self.webpackChunkapi_wiki||[]).push([[334],{2264:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var i=s(4848),r=s(8453);const t={},l="Descriptive API Spec",d={id:"Descriptive API Contract/descriptive_wiki",title:"Descriptive API Spec",description:"API Contract Details:",source:"@site/docs/Descriptive API Contract/descriptive_wiki.md",sourceDirName:"Descriptive API Contract",slug:"/Descriptive API Contract/descriptive_wiki",permalink:"/githubActions/docs/Descriptive API Contract/descriptive_wiki",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tutorial Intro",permalink:"/githubActions/docs/intro"},next:{title:"JSON API Spec",permalink:"/githubActions/docs/Json API Contract/json_wiki"}},c={},a=[{value:"API Contract Details:",id:"api-contract-details",level:2},{value:"Endpoint: /users",id:"endpoint-users",level:3},{value:"Request Formats:",id:"request-formats",level:4},{value:"GET",id:"get",level:5},{value:"POST",id:"post",level:5},{value:"PUT",id:"put",level:5},{value:"DELETE",id:"delete",level:5},{value:"Response Formats:",id:"response-formats",level:4},{value:"GET",id:"get-1",level:5},{value:"POST",id:"post-1",level:5},{value:"PUT",id:"put-1",level:5},{value:"DELETE",id:"delete-1",level:5},{value:"Error Handling:",id:"error-handling",level:4},{value:"Authentication:",id:"authentication",level:4},{value:"Authorization:",id:"authorization",level:4},{value:"Rate Limiting:",id:"rate-limiting",level:4},{value:"Definitions:",id:"definitions",level:2},{value:"Descriptive Wiki:",id:"descriptive-wiki",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"descriptive-api-spec",children:"Descriptive API Spec"}),"\n",(0,i.jsx)(n.h2,{id:"api-contract-details",children:"API Contract Details:"}),"\n",(0,i.jsx)(n.p,{children:"The API contract defines the following endpoint:"}),"\n",(0,i.jsx)(n.h3,{id:"endpoint-users",children:"Endpoint: /users"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint is used to manage user data. It supports the following HTTP methods:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"GET - Retrieve user data by ID"}),"\n",(0,i.jsx)(n.li,{children:"POST - Create a new user"}),"\n",(0,i.jsx)(n.li,{children:"PUT - Update an existing user"}),"\n",(0,i.jsx)(n.li,{children:"DELETE - Delete a user by ID"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"request-formats",children:"Request Formats:"}),"\n",(0,i.jsx)(n.h5,{id:"get",children:"GET"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Params:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"id - The ID of the user to retrieve"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Description: Retrieves user data by ID"}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"post",children:"POST"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Body:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"name - A string representing the user's name"}),"\n",(0,i.jsx)(n.li,{children:"email - A string representing the user's email"}),"\n",(0,i.jsx)(n.li,{children:"password - A string representing the user's password"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Description: Creates a new user"}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"put",children:"PUT"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Params:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"id - The ID of the user to update"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Body:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"name - A string representing the user's name"}),"\n",(0,i.jsx)(n.li,{children:"email - A string representing the user's email"}),"\n",(0,i.jsx)(n.li,{children:"password - A string representing the user's password"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Description: Updates an existing user"}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"delete",children:"DELETE"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Params:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"id - The ID of the user to delete"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Description: Deletes a user by ID"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"response-formats",children:"Response Formats:"}),"\n",(0,i.jsx)(n.h5,{id:"get-1",children:"GET"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["200 - Successful response containing user data","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"id - A string representing the user's ID"}),"\n",(0,i.jsx)(n.li,{children:"name - A string representing the user's name"}),"\n",(0,i.jsx)(n.li,{children:"email - A string representing the user's email"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["404 - Error response when user data is not found","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"message - A string describing the error"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"post-1",children:"POST"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["201 - Successful response containing user data and message","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"id - A string representing the user's ID"}),"\n",(0,i.jsx)(n.li,{children:"message - A string describing the success"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["400 - Error response when request is missing or has invalid parameters","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"message - A string describing the error"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"put-1",children:"PUT"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["200 - Successful response containing message","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"message - A string describing the success"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["404 - Error response when user data is not found","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"message - A string describing the error"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"delete-1",children:"DELETE"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["200 - Successful response containing message","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"message - A string describing the success"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["404 - Error response when user data is not found","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"message - A string describing the error"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"error-handling",children:"Error Handling:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"400 - Bad request - Missing or invalid parameters"}),"\n",(0,i.jsx)(n.li,{children:"401 - Unauthorized - Authentication required"}),"\n",(0,i.jsx)(n.li,{children:"404 - Not found - Resource not found"}),"\n",(0,i.jsx)(n.li,{children:"500 - Internal server error - Something went wrong on our end"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"authentication",children:"Authentication:"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint requires authentication."}),"\n",(0,i.jsx)(n.h4,{id:"authorization",children:"Authorization:"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint requires authorization."}),"\n",(0,i.jsx)(n.h4,{id:"rate-limiting",children:"Rate Limiting:"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint is rate limited to 100 requests per hour. If the limit is exceeded, the following message will be returned:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"message - A string describing the rate limit exceeded error."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"definitions",children:"Definitions:"}),"\n",(0,i.jsx)(n.p,{children:"There are no definitions or data models used in the API contract."}),"\n",(0,i.jsx)(n.h2,{id:"descriptive-wiki",children:"Descriptive Wiki:"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"/users"})," endpoint is used to manage user data."]}),"\n",(0,i.jsxs)(n.p,{children:["To retrieve user data by ID, send a GET request to ",(0,i.jsx)(n.code,{children:"/users?id=<user_id>"}),". If the user is found, the server will return a 200 status code along with the user data. If the user is not found, the server will return a 404 status code along with an error message."]}),"\n",(0,i.jsxs)(n.p,{children:["To create a new user, send a POST request to ",(0,i.jsx)(n.code,{children:"/users"})," with the following parameters in the request body:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"name - A string representing the user's name"}),"\n",(0,i.jsx)(n.li,{children:"email - A string representing the user's email"}),"\n",(0,i.jsx)(n.li,{children:"password - A string representing the user's password"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If the request is successful, the server will return a 201 status code along with the user data and a success message. If the request is invalid, the server will return a 400 status code along with an error message."}),"\n",(0,i.jsxs)(n.p,{children:["To update an existing user, send a PUT request to ",(0,i.jsx)(n.code,{children:"/users?id=<user_id>"})," with the following parameters"]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);