"use strict";(self.webpackChunkapi_wiki=self.webpackChunkapi_wiki||[]).push([[334],{2264:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var n=s(4848),t=s(8453);const r={},l="Descriptive API Spec",d={id:"Descriptive API Contract/descriptive_wiki",title:"Descriptive API Spec",description:"API Contract Details:",source:"@site/docs/Descriptive API Contract/descriptive_wiki.md",sourceDirName:"Descriptive API Contract",slug:"/Descriptive API Contract/descriptive_wiki",permalink:"/githubActions/docs/Descriptive API Contract/descriptive_wiki",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tutorial Intro",permalink:"/githubActions/docs/intro"},next:{title:"JSON API Spec",permalink:"/githubActions/docs/Json API Contract/json_wiki"}},a={},o=[{value:"API Contract Details:",id:"api-contract-details",level:2},{value:"Endpoints:",id:"endpoints",level:3},{value:"/visitors",id:"visitors",level:4},{value:"Request Formats",id:"request-formats",level:5},{value:"GET",id:"get",level:6},{value:"POST",id:"post",level:6},{value:"PUT",id:"put",level:6},{value:"DELETE",id:"delete",level:6},{value:"Response Formats",id:"response-formats",level:5},{value:"GET",id:"get-1",level:6},{value:"POST",id:"post-1",level:6},{value:"PUT",id:"put-1",level:6},{value:"DELETE",id:"delete-1",level:6},{value:"Definitions:",id:"definitions",level:4},{value:"Descriptive Wiki:",id:"descriptive-wiki",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"descriptive-api-spec",children:"Descriptive API Spec"}),"\n",(0,n.jsx)(i.h2,{id:"api-contract-details",children:"API Contract Details:"}),"\n",(0,n.jsxs)(i.p,{children:["This API contract contains one endpoint: ",(0,n.jsx)(i.code,{children:"/visitors"}),". This endpoint is used to manage visitor data and allows for the following HTTP methods: GET, POST, PUT, and DELETE."]}),"\n",(0,n.jsx)(i.h3,{id:"endpoints",children:"Endpoints:"}),"\n",(0,n.jsx)(i.h4,{id:"visitors",children:"/visitors"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Description: Endpoint to manage visitor data"}),"\n",(0,n.jsx)(i.li,{children:"Methods: GET, POST, PUT, DELETE"}),"\n",(0,n.jsx)(i.li,{children:"Authentication: Yes"}),"\n",(0,n.jsx)(i.li,{children:"Authorization: Yes"}),"\n",(0,n.jsx)(i.li,{children:"Rate Limiting: 100 requests per hour"}),"\n",(0,n.jsxs)(i.li,{children:["Error Handling:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"400: Bad request - Missing or invalid parameters"}),"\n",(0,n.jsx)(i.li,{children:"401: Unauthorized - Authentication required"}),"\n",(0,n.jsx)(i.li,{children:"404: Not found - Resource not found"}),"\n",(0,n.jsx)(i.li,{children:"500: Internal server error - Something went wrong on our end"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h5,{id:"request-formats",children:"Request Formats"}),"\n",(0,n.jsx)(i.h6,{id:"get",children:"GET"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Params: id"}),"\n",(0,n.jsx)(i.li,{children:"Description: Retrieve visitor data by ID"}),"\n"]}),"\n",(0,n.jsx)(i.h6,{id:"post",children:"POST"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Body:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"name (string)"}),"\n",(0,n.jsx)(i.li,{children:"email (string)"}),"\n",(0,n.jsx)(i.li,{children:"password (string)"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.li,{children:"Description: Create a new visitor"}),"\n"]}),"\n",(0,n.jsx)(i.h6,{id:"put",children:"PUT"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Params: id"}),"\n",(0,n.jsxs)(i.li,{children:["Body:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"name (string)"}),"\n",(0,n.jsx)(i.li,{children:"email (string)"}),"\n",(0,n.jsx)(i.li,{children:"password (string)"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.li,{children:"Description: Update an existing visitor"}),"\n"]}),"\n",(0,n.jsx)(i.h6,{id:"delete",children:"DELETE"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Params: id"}),"\n",(0,n.jsx)(i.li,{children:"Description: Delete a visitor by ID"}),"\n"]}),"\n",(0,n.jsx)(i.h5,{id:"response-formats",children:"Response Formats"}),"\n",(0,n.jsx)(i.h6,{id:"get-1",children:"GET"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["200:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"id (string)"}),"\n",(0,n.jsx)(i.li,{children:"name (string)"}),"\n",(0,n.jsx)(i.li,{children:"email (string)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["404:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"message (string)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h6,{id:"post-1",children:"POST"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["201:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"id (string)"}),"\n",(0,n.jsx)(i.li,{children:"message (string)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["400:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"message (string)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h6,{id:"put-1",children:"PUT"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["200:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"message (string)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["404:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"message (string)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h6,{id:"delete-1",children:"DELETE"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["200:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"message (string)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["404:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"message (string)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"definitions",children:"Definitions:"}),"\n",(0,n.jsx)(i.p,{children:"There are no definitions or data models used in this API contract."}),"\n",(0,n.jsx)(i.h2,{id:"descriptive-wiki",children:"Descriptive Wiki:"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"/visitors"})," endpoint allows for the management of visitor data. The following HTTP methods are available: GET, POST, PUT, and DELETE."]}),"\n",(0,n.jsxs)(i.p,{children:["To retrieve visitor data by ID, make a GET request to ",(0,n.jsx)(i.code,{children:"/visitors?id=<visitor_id>"}),". If the visitor exists, the server will respond with a 200 status code and the visitor's ID, name, and email. If the visitor does not exist, the server will respond with a 404 status code and a message indicating that the visitor was not found."]}),"\n",(0,n.jsxs)(i.p,{children:["To create a new visitor, make a POST request to ",(0,n.jsx)(i.code,{children:"/visitors"})," with the visitor's name, email, and password in the request body. If the visitor is successfully created, the server will respond with a 201 status code and the visitor's ID and a message indicating that the visitor was successfully created. If the request is missing parameters or the parameters are invalid, the server will respond with a 400 status code and a message indicating that the request was invalid."]}),"\n",(0,n.jsxs)(i.p,{children:["To update an existing visitor, make a PUT request to ",(0,n.jsx)(i.code,{children:"/visitors?id=<visitor_id>"})," with the visitor's new name, email, and password in the request body. If the visitor is successfully updated, the server will respond with a 200 status code and a message indicating that the visitor was successfully updated. If the visitor does not exist, the server will respond with a 404 status code and a message indicating that the visitor was not found."]}),"\n",(0,n.jsxs)(i.p,{children:["To delete a visitor by ID, make a DELETE request to ",(0,n.jsx)(i.code,{children:"/visitors?id=<visitor_id>"}),". If the visitor is successfully deleted, the server will respond with a 200 status code and a message indicating that the visitor was successfully deleted. If the visitor does not exist, the server will respond with a 404 status code and a message indicating that the visitor was not found."]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>d});var n=s(6540);const t={},r=n.createContext(t);function l(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);