"use strict";(self.webpackChunkapi_wiki=self.webpackChunkapi_wiki||[]).push([[588],{3230:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=t(4848),i=t(8453);const r={},o="JSON API Spec",a={id:"Json API Contract/json_wiki",title:"JSON API Spec",description:"",source:"@site/docs/Json API Contract/json_wiki.md",sourceDirName:"Json API Contract",slug:"/Json API Contract/json_wiki",permalink:"/githubActions/docs/Json API Contract/json_wiki",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Descriptive API Spec",permalink:"/githubActions/docs/Descriptive API Contract/descriptive_wiki"}},c={},d=[];function u(n){const e={code:"code",h1:"h1",pre:"pre",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"json-api-spec",children:"JSON API Spec"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="JSON API Spec"',children:'{\n    "endpoints": {\n        "/users": {\n            "description": "Endpoint to manage user data",\n            "methods": [\n                "GET",\n                "POST",\n                "PUT",\n                "DELETE"\n            ],\n            "requestFormats": {\n                "GET": {\n                    "params": [\n                        "id"\n                    ],\n                    "description": "Retrieve user data by ID"\n                },\n                "POST": {\n                    "body": {\n                        "name": "string",\n                        "email": "string",\n                        "password": "string"\n                    },\n                    "description": "Create a new user"\n                },\n                "PUT": {\n                    "params": [\n                        "id"\n                    ],\n                    "body": {\n                        "name": "string",\n                        "email": "string",\n                        "password": "string"\n                    },\n                    "description": "Update an existing user"\n                },\n                "DELETE": {\n                    "params": [\n                        "id"\n                    ],\n                    "description": "Delete a user by ID"\n                }\n            },\n            "responseFormats": {\n                "GET": {\n                    "200": {\n                        "id": "string",\n                        "name": "string",\n                        "email": "string"\n                    },\n                    "404": {\n                        "message": "string"\n                    }\n                },\n                "POST": {\n                    "201": {\n                        "id": "string",\n                        "message": "string"\n                    },\n                    "400": {\n                        "message": "string"\n                    }\n                },\n                "PUT": {\n                    "200": {\n                        "message": "string"\n                    },\n                    "404": {\n                        "message": "string"\n                    }\n                },\n                "DELETE": {\n                    "200": {\n                        "message": "string"\n                    },\n                    "404": {\n                        "message": "string"\n                    }\n                }\n            },\n            "errorHandling": {\n                "400": "Bad request - Missing or invalid parameters",\n                "401": "Unauthorized - Authentication required",\n                "404": "Not found - Resource not found",\n                "500": "Internal server error - Something went wrong on our end"\n            },\n            "authentication": true,\n            "authorization": true,\n            "rateLimiting": {\n                "limit": 100,\n                "interval": "hour",\n                "message": "Rate limit exceeded, please try again later"\n            }\n        }\n    }\n}\n'})})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);