"use strict";(self.webpackChunkapi_wiki=self.webpackChunkapi_wiki||[]).push([[334],{2264:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var r=i(4848),s=i(8453);const t={},c="Descriptive API Spec",o={id:"Descriptive API Contract/descriptive_wiki",title:"Descriptive API Spec",description:"API Contract Details:",source:"@site/docs/Descriptive API Contract/descriptive_wiki.md",sourceDirName:"Descriptive API Contract",slug:"/Descriptive API Contract/descriptive_wiki",permalink:"/githubActions/docs/Descriptive API Contract/descriptive_wiki",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tutorial Intro",permalink:"/githubActions/docs/intro"},next:{title:"JSON API Spec",permalink:"/githubActions/docs/Json API Contract/json_wiki"}},l={},a=[{value:"API Contract Details:",id:"api-contract-details",level:2},{value:"Endpoints:",id:"endpoints",level:3},{value:"List all the existing accounts",id:"list-all-the-existing-accounts",level:4},{value:"List all the existing organizations",id:"list-all-the-existing-organizations",level:4},{value:"List plans data",id:"list-plans-data",level:4},{value:"Definitions:",id:"definitions",level:3},{value:"AccountCreationSource",id:"accountcreationsource",level:4},{value:"AccountIdParameter",id:"accountidparameter",level:4},{value:"AccountInfo",id:"accountinfo",level:4}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"descriptive-api-spec",children:"Descriptive API Spec"}),"\n",(0,r.jsx)(n.h2,{id:"api-contract-details",children:"API Contract Details:"}),"\n",(0,r.jsx)(n.p,{children:"The API contract is in JSON format and contains information about the NewRelic Observability API. It includes details about the API's title, version, host, security, paths, and definitions."}),"\n",(0,r.jsx)(n.h3,{id:"endpoints",children:"Endpoints:"}),"\n",(0,r.jsx)(n.h4,{id:"list-all-the-existing-accounts",children:"List all the existing accounts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /subscriptions/subscriptionId/providers/NewRelic.Observability/accounts\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": This endpoint returns a list of all the existing accounts for the given user."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ApiVersionParameter"})," - The version of the API (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SubscriptionIdParameter"})," - The subscription ID (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UserEmailParameter"})," - The user email (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"LocationParameter"})," - The location for NewRelic (query parameter, required)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"})," - ARM operation completed successfully. Returns an object with a ",(0,r.jsx)(n.code,{children:"value"})," property containing an array of ",(0,r.jsx)(n.code,{children:"AccountResource"})," objects."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"default"})," - An unexpected error response. Returns an object with an ",(0,r.jsx)(n.code,{children:"error"})," property containing information about the error."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Accounts_List_MaximumSet_Gen"})," - An example response for this endpoint with maximum set of values."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Accounts_List_MinimumSet_Gen"})," - An example response for this endpoint with minimum set of values."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"list-all-the-existing-organizations",children:"List all the existing organizations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /subscriptions/subscriptionId/providers/NewRelic.Observability/organizations\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": This endpoint returns a list of all the existing organizations for the given user."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ApiVersionParameter"})," - The version of the API (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SubscriptionIdParameter"})," - The subscription ID (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UserEmailParameter"})," - The user email (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"LocationParameter"})," - The location for NewRelic (query parameter, required)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"})," - ARM operation completed successfully. Returns an object with a ",(0,r.jsx)(n.code,{children:"value"})," property containing an array of ",(0,r.jsx)(n.code,{children:"OrganizationResource"})," objects."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"default"})," - An unexpected error response. Returns an object with an ",(0,r.jsx)(n.code,{children:"error"})," property containing information about the error."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Organizations_List_MaximumSet_Gen"})," - An example response for this endpoint with maximum set of values."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Organizations_List_MinimumSet_Gen"})," - An example response for this endpoint with minimum set of values."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"list-plans-data",children:"List plans data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /subscriptions/subscriptionId/providers/NewRelic.Observability/plans\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": This endpoint returns a list of plan data."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ApiVersionParameter"})," - The version of the API (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SubscriptionIdParameter"})," - The subscription ID (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AccountIdParameter"})," - The account ID (query parameter, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"OrganizationIdParameter"})," - The organization ID (query parameter, required)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"})," - ARM operation completed successfully. Returns an object with a ",(0,r.jsx)(n.code,{children:"value"})," property containing an array of ",(0,r.jsx)(n.code,{children:"PlanDataResource"})," objects."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"default"})," - An unexpected error response. Returns an object with an ",(0,r.jsx)(n.code,{children:"error"})," property containing information about the error."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Plans_List_MaximumSet_Gen"})," - An example response for this endpoint with maximum set of values."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Plans_List_MinimumSet_Gen"})," - An example response for this endpoint with minimum set of values."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"definitions",children:"Definitions:"}),"\n",(0,r.jsx)(n.h4,{id:"accountcreationsource",children:"AccountCreationSource"}),"\n",(0,r.jsx)(n.p,{children:"Source of Account creation."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"LIFTR"})," - Account is created from LIFTR."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"NEWRELIC"})," - Account is created from NEWRELIC."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"accountidparameter",children:"AccountIdParameter"}),"\n",(0,r.jsx)(n.p,{children:"Account ID parameter."}),"\n",(0,r.jsx)(n.h4,{id:"accountinfo",children:"AccountInfo"}),"\n",(0,r.jsx)(n.p,{children:"Account information for the NewRelic account."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"accountId"})," - Account ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ingestionKey"})," - Ingestion key of the"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);