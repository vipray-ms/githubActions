"use strict";(self.webpackChunkapi_wiki=self.webpackChunkapi_wiki||[]).push([[588],{3230:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=e(4848),s=e(8453);const i={},o="JSON API Spec",a={id:"Json API Contract/json_wiki",title:"JSON API Spec",description:"",source:"@site/docs/Json API Contract/json_wiki.md",sourceDirName:"Json API Contract",slug:"/Json API Contract/json_wiki",permalink:"/githubActions/docs/Json API Contract/json_wiki",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Descriptive API Spec",permalink:"/githubActions/docs/Descriptive API Contract/descriptive_wiki"}},c={},d=[];function u(n){const r={code:"code",h1:"h1",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"json-api-spec",children:"JSON API Spec"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",metastring:'title="JSON API Spec"',children:'{\r\n    "endpoints": {\r\n        "/users": {\r\n            "description": "Endpoint to manage user data",\r\n            "methods": [\r\n                "GET",\r\n                "POST",\r\n                "PUT",\r\n                "DELETE"\r\n            ],\r\n            "requestFormats": {\r\n                "GET": {\r\n                    "params": [\r\n                        "id"\r\n                    ],\r\n                    "description": "Retrieve user data by ID"\r\n                },\r\n                "POST": {\r\n                    "body": {\r\n                        "name": "string",\r\n                        "email": "string",\r\n                        "password": "string"\r\n                    },\r\n                    "description": "Create a new user"\r\n                },\r\n                "PUT": {\r\n                    "params": [\r\n                        "id"\r\n                    ],\r\n                    "body": {\r\n                        "name": "string",\r\n                        "email": "string",\r\n                        "password": "string"\r\n                    },\r\n                    "description": "Update an existing user"\r\n                },\r\n                "DELETE": {\r\n                    "params": [\r\n                        "id"\r\n                    ],\r\n                    "description": "Delete a user by ID"\r\n                }\r\n            },\r\n            "responseFormats": {\r\n                "GET": {\r\n                    "200": {\r\n                        "id": "string",\r\n                        "name": "string",\r\n                        "email": "string"\r\n                    },\r\n                    "404": {\r\n                        "message": "string"\r\n                    }\r\n                },\r\n                "POST": {\r\n                    "201": {\r\n                        "id": "string",\r\n                        "message": "string"\r\n                    },\r\n                    "400": {\r\n                        "message": "string"\r\n                    }\r\n                },\r\n                "PUT": {\r\n                    "200": {\r\n                        "message": "string"\r\n                    },\r\n                    "404": {\r\n                        "message": "string"\r\n                    }\r\n                },\r\n                "DELETE": {\r\n                    "200": {\r\n                        "message": "string"\r\n                    },\r\n                    "404": {\r\n                        "message": "string"\r\n                    }\r\n                }\r\n            },\r\n            "errorHandling": {\r\n                "400": "Bad request - Missing or invalid parameters",\r\n                "401": "Unauthorized - Authentication required",\r\n                "404": "Not found - Resource not found",\r\n                "500": "Internal server error - Something went wrong on our end"\r\n            },\r\n            "authentication": true,\r\n            "authorization": true,\r\n            "rateLimiting": {\r\n                "limit": 100,\r\n                "interval": "hour",\r\n                "message": "Rate limit exceeded, please try again later"\r\n            }\r\n        }\r\n    }\r\n}\n'})})]})}function p(n={}){const{wrapper:r}={...(0,s.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>o,x:()=>a});var t=e(6540);const s={},i=t.createContext(s);function o(n){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function a(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),t.createElement(i.Provider,{value:r},n.children)}}}]);